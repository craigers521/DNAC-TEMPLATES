[
  {
    "name": "VLAN-GPS-J2",
    "description": "To Create VLAN Groups ",
    "tags": [],
    "author": "admin",
    "deviceTypes": [
      {
        "productFamily": "Wireless Controller",
        "productSeries": "Cisco Catalyst 9800 Series Wireless Controllers"
      },
      {
        "productFamily": "Wireless Controller",
        "productSeries": "Cisco Catalyst 9800 Wireless Controllers for Cloud"
      }
    ],
    "softwareType": "IOS",
    "softwareVariant": "XE",
    "templateContent": "{# Dictionary to manage the VLAN GROUPS Created #}\n{# Dictionary Group is concatenated with the VLAN to create the vlan name #}\n\n{# \nThis code is based on the cli configuration parameters available\nas commas and hyphens are available, we can allow IOS-XE to put \nhyphens in automatically\n\nWLC-C9800(config)#vlan group test vlan-list 402 ?\n  ,     comma\n  -     hyphen\n  <cr>  <cr>\n#}\n\n{# Dictionary Groups #}\n{% set VlanListA = [\n  {'vlan':'300','name':'example-systems-int'},\n  {'vlan':'301','name':'example-systems-int'},\n  {'vlan':'370','name':'example-office-wifi'},\n  {'vlan':'371','name':'example-office-wifi'},\n  {'vlan':'640','name':'example-systems-int'},\n  {'vlan':'641','name':'example-systems-int'}\n  ]%}\n  \n{% set VlanListB = [\n  {'vlan':'400','name':'example-systems-int'},\n  {'vlan':'401','name':'example-systems-int'},\n  {'vlan':'402','name':'example-systems-int'},\n  {'vlan':'470','name':'example-office-wifi'},\n  {'vlan':'471','name':'example-office-wifi'},\n  {'vlan':'740','name':'example-systems-int'},\n  {'vlan':'743','name':'example-systems-int'},\n  {'vlan':'749','name':'example-systems-int'}\n  ]%}\n\n{# The following Macro will use the above dictionaries when and if called #}\n{% macro config_list(vlanpairs) %}\n{% set vlanArray = [] %}\n{% set prev_group = \"\" %}\n{% for vlanpair in vlanpairs %}\n{% if prev_group != vlanpair['name'] %}\n{% if prev_group != \"\" %}\n{# Render Config line #}\nvlan group {{ prev_group }} vlan-list {{ vlanArray|join(',') }}\n{% endif %}\n{% set vlanArray = [] %}\n{% do vlanArray.append(vlanpair['vlan']) %}\n{% set prev_group = (vlanpair['name']) %}\n{% else %}\n{% do vlanArray.append(vlanpair['vlan']) %}\n{% endif %}\n{% if loop.last %}\n{# Render Config line #}\nvlan group {{ prev_group }} vlan-list {{ vlanArray|join(',') }}\n{% endif %}\n{% endfor %}\n{% endmacro %}\n\n{# The following Macro will use the above dictionary when and if called #}\n{% macro config_vlan_db(vlanpairs) %}\n{% for vlanpair in vlanpairs %}\n{# Create a Vlan in Vlan Database#}\nvlan {{ vlanpair.vlan }}\nname {{ vlanpair.name }}-{{ vlanpair.vlan }}\n{% endfor %}\n{% endmacro %}\n\n{# Logic to populate config pragmatically #}\n{% if vlan_list == \"A\" %}\n   {{ config_list(VlanListA) }}\n   {{ config_vlan_db(VlanListA) }}\n{% elif vlan_list == \"B\" %}\n   {{ config_list(VlanListB) }}\n   {{ config_vlan_db(VlanListB) }}\n{% endif %}\n\n\n",
    "templateParams": [
      {
        "parameterName": "vlan_list",
        "dataType": "STRING",
        "defaultValue": "",
        "description": null,
        "required": true,
        "notParam": false,
        "paramArray": false,
        "instructionText": "Choose from drop down",
        "group": null,
        "order": 1,
        "customOrder": 0,
        "selection": {
          "selectionType": "SINGLE_SELECT",
          "selectionValues": {
            "300-301,370-371,640-641": "A",
            "400-402,470-471,740-741": "B"
          },
          "defaultSelectedValues": [
            "300-301,370-371,640-641"
          ],
          "id": null
        },
        "range": [],
        "key": null,
        "provider": null,
        "binding": "",
        "sensitiveField": false,
        "displayName": "Vlan Groups"
      }
    ],
    "rollbackTemplateParams": [],
    "composite": false,
    "containingTemplates": [],
    "language": "JINJA",
    "promotedTemplateContent": "{# Dictionary to manage the VLAN GROUPS Created #}\n{# Dictionary Group is concatenated with the VLAN to create the vlan name #}\n\n{# \nThis code is based on the cli configuration parameters available\nas commas and hyphens are available, we can allow IOS-XE to put \nhyphens in automatically\n\nWLC-C9800(config)#vlan group test vlan-list 402 ?\n  ,     comma\n  -     hyphen\n  <cr>  <cr>\n#}\n\n{# Dictionary Groups #}\n{% set VlanListA = [\n  {'vlan':'300','name':'example-systems-int'},\n  {'vlan':'301','name':'example-systems-int'},\n  {'vlan':'370','name':'example-office-wifi'},\n  {'vlan':'371','name':'example-office-wifi'},\n  {'vlan':'640','name':'example-systems-int'},\n  {'vlan':'641','name':'example-systems-int'}\n  ]%}\n  \n{% set VlanListB = [\n  {'vlan':'400','name':'example-systems-int'},\n  {'vlan':'401','name':'example-systems-int'},\n  {'vlan':'402','name':'example-systems-int'},\n  {'vlan':'470','name':'example-office-wifi'},\n  {'vlan':'471','name':'example-office-wifi'},\n  {'vlan':'740','name':'example-systems-int'},\n  {'vlan':'743','name':'example-systems-int'},\n  {'vlan':'749','name':'example-systems-int'}\n  ]%}\n\n{# The following Macro will use the above dictionaries when and if called #}\n{% macro config_list(vlanpairs) %}\n{% set vlanArray = [] %}\n{% set prev_group = \"\" %}\n{% for vlanpair in vlanpairs %}\n{% if prev_group != vlanpair['name'] %}\n{% if prev_group != \"\" %}\n{# Render Config line #}\nvlan group {{ prev_group }} vlan-list {{ vlanArray|join(',') }}\n{% endif %}\n{% set vlanArray = [] %}\n{% do vlanArray.append(vlanpair['vlan']) %}\n{% set prev_group = (vlanpair['name']) %}\n{% else %}\n{% do vlanArray.append(vlanpair['vlan']) %}\n{% endif %}\n{% if loop.last %}\n{# Render Config line #}\nvlan group {{ prev_group }} vlan-list {{ vlanArray|join(',') }}\n{% endif %}\n{% endfor %}\n{% endmacro %}\n\n{# The following Macro will use the above dictionary when and if called #}\n{% macro config_vlan_db(vlanpairs) %}\n{% for vlanpair in vlanpairs %}\n{# Create a Vlan in Vlan Database#}\nvlan {{ vlanpair.vlan }}\nname {{ vlanpair.name }}-{{ vlanpair.vlan }}\n{% endfor %}\n{% endmacro %}\n\n{# Logic to populate config pragmatically #}\n{% if vlan_list == \"A\" %}\n   {{ config_list(VlanListA) }}\n   {{ config_vlan_db(VlanListA) }}\n{% elif vlan_list == \"B\" %}\n   {{ config_list(VlanListB) }}\n   {{ config_vlan_db(VlanListB) }}\n{% endif %}\n\n\n",
    "promotedTemplateParams": [
      {
        "parameterName": "vlan_list",
        "dataType": "STRING",
        "defaultValue": "",
        "description": null,
        "required": true,
        "notParam": false,
        "paramArray": false,
        "instructionText": "Choose from drop down",
        "group": null,
        "order": 1,
        "customOrder": 0,
        "selection": {
          "selectionType": "SINGLE_SELECT",
          "selectionValues": {
            "300-301,370-371,640-641": "A",
            "400-402,470-471,740-741": "B"
          },
          "defaultSelectedValues": [
            "300-301,370-371,640-641"
          ],
          "id": null
        },
        "range": [],
        "key": null,
        "provider": null,
        "binding": "",
        "sensitiveField": false,
        "id": null,
        "displayName": "Vlan Groups"
      }
    ],
    "customParamsOrder": false,
    "createTime": 1698938060830,
    "lastUpdateTime": 1698946335113,
    "latestVersionTime": 1698946362744,
    "validationErrors": {
      "templateErrors": [],
      "rollbackTemplateErrors": [],
      "templateId": "6cf3c21d-7aba-4357-85b1-2e80b7046755",
      "templateVersion": null
    },
    "noOfConflicts": 0,
    "documentDatabase": false,
    "projectAssociated": true
  }
]